@page "/chitietphieunhap/{ID:int}"
@rendermode InteractiveServer
@inject ChiTietPhieuNhap_Service chitietPhieuNhap_Service
@inject PhieuNhap_Service phieuNhap_Service
@inject IToastService ToastService
@inject NavigationManager Navigation

<style>
    .modal {
        background-color: rgba(0, 0, 0, 0.5);
    }
</style>


<h2 style="text-align:center;font-weight:bold">Chi tiết phiếu nhập kho @ID</h2>
<button class="btn btn-success" @onclick="OpenAddModal" style="margin-bottom:10px">
    <span class="oi oi-plus" aria-hidden="true">Thêm chi tiết phiếu nhập mới</span>
</button>

@if (dataList == null)
{
    <p><em>Loading......</em></p>
}
else
{
    <TelerikGrid Data="@dataList" Pageable="true" Sortable="true" Height="calc(100vh - 170px)" Resizable="true" Reorderable="true" Class="telerik-grid">
        <GridColumns>
            <GridColumn Field="SanPham.TenSanPham" Title="Sản phẩm" Width="100px" />
            <GridColumn Field="@nameof(XNK_NhapKhoRawData.SlNhap)" Title="Số lượng nhập" Width="100px" />
            <GridColumn Field="@nameof(XNK_NhapKhoRawData.DonGiaNhap)" Title="Đơn giá nhập" Width="100px" />

            <GridCommandColumn Width="180px">
                @* <GridCommandButton Command="Edit" OnClick="@EditItem">
                    <span class="oi oi-pencil" Width="100px"></span> Sửa
                </GridCommandButton> *@
                <GridCommandButton Command="Delete" OnClick="@DeleteItem">
                    <span class="oi oi-trash" Width="100px"></span> Xóa
                </GridCommandButton>
            </GridCommandColumn>
        </GridColumns>
    </TelerikGrid>
}

<div class="modal fade @addModalClass" tabindex="-1" role="dialog" style="@addModalDisplayStyle">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header" style="background:#2f8f3a; color:#dedcd8">
                <h5 class="modal-title"><b>Thêm chi tiết phiếu nhập</b></h5>
                <button type="button" class="close" @onclick="CloseAddModal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <EditForm Model="@chitietPhieuNhap" OnValidSubmit="createChiTietPhieuNhap">
                    <div class="form-group">
                        <label for="MaLo" class="control-label"><b>Mã sản phẩm: </b></label>
                        <InputSelect class="form-control" @bind-Value="@chitietPhieuNhap.SanPhamId">
                            <option value="">-- Chọn sản phẩm --</option>
                            @foreach (var item in sanPhamList)
                            {
                                <option value="@item.AutoId">@item.TenSanPham</option>
                            }
                        </InputSelect>
                    </div>
                    <div class="form-group">
                        <label for="SoKg" class="control-label"><b>Số lượng: </b></label>
                        <InputNumber class="form-control" @bind-Value="chitietPhieuNhap.SlNhap" />
                        <ValidationMessage For="@(()=>chitietPhieuNhap.SlNhap)" />
                    </div>
                    <div class="form-group">
                        <label for="DonGia" class="control-label"><b>Đơn giá: </b></label>
                        <InputNumber class="form-control" @bind-Value="chitietPhieuNhap.DonGiaNhap" />
                        <ValidationMessage For="@(()=>chitietPhieuNhap.DonGiaNhap)" />
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">Thêm chi tiết phiếu nhập</button>
                        <button type="button" class="btn btn-secondary" @onclick="CloseDeleteModal">Đóng</button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>


<div class="modal fade @deleteModalClass" tabindex="-1" role="dialog" style="@deleteModalDisplayStyle">
    <div class="modal-dialog model-lg" role="document">
        <div class="modal-content">
            <div class="modal-header" style="background:#2f8f3a; color:beige">
                <h5 class="modal-title"><b>Xóa phiếu nhập</b></h5>
                <button type="button" class="close" @onclick="CloseDeleteModal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" style="background:#dedcd8; color:brown; font-size:30px">
                <p style="color:red">Bạn có chắc chắn muốn xóa phiếu nhập này không?</p>
                <EditForm Model="@chitietPhieuNhap" OnValidSubmit="deleteChiTietPhieuNhap">
                    <DataAnnotationsValidator />
                    <div class="form-group">
                        <label for="ID" class="control-label">ID: </label>
                        <label><b>@chitietPhieuNhap.AutoId</b></label>
                    </div>
                    <div class="form-group">
                        <label for="MaSanPham" class="control-label">Mã sản phẩm: </label>
                        <label><b>@chitietPhieuNhap.SanPhamId</b></label>
                    </div>
                    <div class="form-group">
                        <label for="Soluong" class="control-label">Số lượng: </label>
                        <label><b>@chitietPhieuNhap.SlNhap</b></label>
                    </div>
                    <div class="form-group">
                        <label for="DonGia" class="control-label">Đơn giá nhập: </label>
                        <label><b>@chitietPhieuNhap.DonGiaNhap</b></label>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">Xóa phiếu nhập</button>
                        <button type="button" class="btn btn-secondary" @onclick="CloseDeleteModal">Đóng</button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>


@code {
    [Parameter]
    public int ID {get; set;}

    public List<XNK_NhapKhoRawData> dataList = new List<XNK_NhapKhoRawData>();
    private XNK_NhapKhoRawData chitietPhieuNhap = new XNK_NhapKhoRawData();
    private List<DanhMucSanPham> sanPhamList = new List<DanhMucSanPham>();

    private string addModalClass = "";
    private string addModalDisplayStyle = "display:none";
    private string editModalClass = "";
    private string editModalDisplayStyle = "display:none";
    private string deleteModalClass = "";
    private string deleteModalDisplayStyle = "display:none";

    protected override async Task OnInitializedAsync()
    {
        dataList = await chitietPhieuNhap_Service.GetChiTietByPhieuNhap(ID);
        sanPhamList = await phieuNhap_Service.GetDanhMucSanPham();
    }

    private void OpenAddModal()
    {
        chitietPhieuNhap = new XNK_NhapKhoRawData();
        addModalClass = "show";
        addModalDisplayStyle = "display:block";
    }

    private void CloseAddModal()
    {
        addModalClass = "";
        addModalDisplayStyle = "display:none";
    }

    private void OpenEditModal(XNK_NhapKhoRawData ctpnEdit)
    {
        chitietPhieuNhap = ctpnEdit;
        editModalClass = "show";
        editModalDisplayStyle = "display:block";
    }

    private void CloseEditModal()
    {
        editModalClass = "";
        editModalDisplayStyle = "display:none";
    }

    private void OpenDeleteModal(XNK_NhapKhoRawData ctpnDelete)
    {
        chitietPhieuNhap = ctpnDelete;
        deleteModalClass = "show";
        deleteModalDisplayStyle = "display:block";
    }

    private void CloseDeleteModal()
    {
        deleteModalClass = "";
        deleteModalDisplayStyle = "display:none";
    }

    private void EditItem(GridCommandEventArgs args)
    {
        var ctpnEdit = (XNK_NhapKhoRawData)args.Item;
        OpenEditModal(ctpnEdit);
    }

    private void DeleteItem(GridCommandEventArgs args)
    {
        var ctpnDelete = (XNK_NhapKhoRawData)args.Item;
        OpenDeleteModal(ctpnDelete);
    }
    
    protected async Task createChiTietPhieuNhap()
    {
        try
        {
            chitietPhieuNhap.NhapKhoId = ID;
            await chitietPhieuNhap_Service.AddChiTietPhieuNhap(chitietPhieuNhap);
            dataList = await chitietPhieuNhap_Service.GetChiTietByPhieuNhap(ID);
            CloseAddModal();
            ToastService.ShowSuccess("Thêm chi tiết phiếu nhập thành công!");
            StateHasChanged();
        }
        catch (Exception e)
        {
            //throw e;
            ToastService.ShowError("Có lỗi xảy ra!");
        }
    }

    protected async Task deleteChiTietPhieuNhap()
    {
        try
        {
            await chitietPhieuNhap_Service.DeleteChiTietPhieuNhapByNhapKho(chitietPhieuNhap.AutoId,ID);
            dataList = await chitietPhieuNhap_Service.GetChiTietByPhieuNhap(ID);
            CloseDeleteModal();
            ToastService.ShowSuccess("Xóa chi tiết phiếu nhập thành công!");
            StateHasChanged();
        }
        catch (Exception e)
        {
            //throw e;
            ToastService.ShowError("Có lỗi xảy ra!");
        }
    }


}
