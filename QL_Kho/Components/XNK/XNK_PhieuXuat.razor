@page "/phieuxuat"
@rendermode InteractiveServer
@inject PhieuXuat_Service phieuXuat_Service
@inject ChiTietPhieuXuat_Service chitietPhieuXuat_Service
@inject SanPham_Service sanPham_Service
@inject IToastService ToastService
@inject NavigationManager Navigation
@inject QlNguoiDung user
@inject QLNguoiDung_Service user_service

<h2 style="text-align:center;font-weight:bold">Phiếu xuất kho</h2>
<button class="btn btn-success" @onclick="OpenAddModal" style="margin-bottom:10px">
    <span class="oi oi-plus" aria-hidden="true">Thêm phiếu xuất mới</span>
</button>

@if (dataList == null)
{
    <p><em>Loading......</em></p>
}
else
{
    <TelerikGrid Data="@dataList" Pageable="true" Sortable="true" Height="calc(100vh - 170px)" Resizable="true" Reorderable="true" Class="telerik-grid">
        <GridColumns>
            <GridColumn Field="@nameof(XNK_XuatKho.SoPhieuXuat)" Title="Số phiếu xuất" Width="100px" />
            <GridColumn Field="Kho.TenKho" Title="Kho" Width="100px" />
            <GridColumn Field="@nameof(XNK_XuatKho.NgayXuatKho)" Title="Ngày xuất kho" Width="100px" />
            <GridColumn Field="@nameof(XNK_XuatKho.GhiChu)" Title="Ghi chú" Width="100px" />

            <GridCommandColumn Width="180px">
                <GridCommandButton Command="Edit" OnClick="@EditItem">
                    <span class="oi oi-pencil" Width="100px"></span> Sửa
                </GridCommandButton>
                <GridCommandButton Command="Delete" OnClick="@DeleteItem">
                    <span class="oi oi-trash" Width="100px"></span> Xóa
                </GridCommandButton>
                <GridCommandButton OnClick="() => ViewDetails((context as XNK_XuatKho).AutoId)">
                    <span class="oi oi-eye" Width="100px"></span> Xem chi tiết phiếu xuất
                </GridCommandButton>
                <GridCommandButton OnClick="() => ExportReport((context as XNK_XuatKho).AutoId.ToString())">
                    <span class="oi oi-trash" Width="100px"></span> In phiếu xuất
                </GridCommandButton>
            </GridCommandColumn>
        </GridColumns>
    </TelerikGrid>
}

<div class="modal fade @addModalClass" tabindex="-1" role="dialog" style="@addModalDisplayStyle">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header" style="background:#2f8f3a; color:beige">
                <h5 class="modal-title"><b>Thêm mới phiếu xuất</b></h5>
                <button type="button" class="close" @onclick="CloseAddModal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" style="background:#e5d2b8; color:brown">
                <EditForm Model="@phieuXuat" OnValidSubmit="createPhieuXuat">
                    <DataAnnotationsValidator />
                    <div class="form-group">
                        <label for="SoPhieuXuat" class="control-label"><b>Số phiếu xuất: </b></label>
                        <InputText class="form-control" @bind-Value=@phieuXuat.SoPhieuXuat />
                        <ValidationMessage For="@(() => phieuXuat.SoPhieuXuat)" />
                    </div>

                    <div class="form-group">
                        <label for="khoID" class="control-label"><b>Kho: </b></label>
                        <InputSelect class="form-control" @bind-Value="@phieuXuat.KhoId">
                            <option value="">-- Chọn kho --</option>
                            @foreach (var item in khoList)
                            {
                                <option value="@item.AutoId">@item.MaKho - @item.TenKho</option>
                            }
                        </InputSelect>
                        <ValidationMessage For="@(()=>phieuXuat.KhoId)" />
                    </div>

                    <div class="form-group">
                        <label for="NgayNhapKho" class="control-label"><b>Ngày xuất kho: </b></label>
                        <InputDate class="form-control" @bind-Value=@phieuXuat.NgayXuatKho />
                        <ValidationMessage For="@(() => phieuXuat.NgayXuatKho)" />
                    </div>
                    <div class="form-group">
                        <label for="GhiChu" class="control-label"><b>Ghi chú: </b></label>
                        <InputText class="form-control" @bind-Value=@phieuXuat.GhiChu />
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">Thêm phiếu xuất</button>
                        <button type="button" class="btn btn-secondary" @onclick="CloseAddModal">Đóng</button>
                    </div>

                    <a class="btn btn-secondary" @onclick="OpenAddChiTietModal" style="margin-top:5px">Thêm</a>
                    <table class="table table-bordered">
                        <tr>
                            <th>Mã sản phẩm</th>
                            <th>Số lượng nhập</th>
                            <th>Đơn giá</th>
                            <th>Thành tiền</th>
                            <th>Xóa</th>
                        </tr>
                        @foreach (XNK_XuatKhoRawData ct in lstCTPX)
                        {
                            <tr>
                                <th>@(GetProductName(@ct.SanPhamId))</th>
                                <th>@ct.SlXuat</th>
                                <th>@ct.DonGiaXuat</th>
                                <th>@(ct.SlXuat * ct.DonGiaXuat)</th>
                                <th>
                                    <button type="button" class="btn btn-danger" style="color:black" @onclick="() => RemoveChiTiet(ct)">Xóa</button>
                                </th>
                            </tr>
                        }
                    </table>
                </EditForm>
            </div>
        </div>
    </div>
</div>

<div class="modal fade @editModalClass" tabindex="-1" role="dialog" style="@editModalDisplayStyle">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header" style="background:#2f8f3a; color:beige">
                <h5 class="modal-title"><b>Sửa phiếu xuất</b></h5>
                <button type="button" class="close" @onclick="CloseEditModal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" style="background:#e5d2b8; color:brown">
                <EditForm Model="@phieuXuat" OnValidSubmit="updatePhieuXuat">
                    <DataAnnotationsValidator />
                    <div class="form-group">
                        <label for="SoPhieuXuat" class="control-label"><b>Số phiếu xuất: </b></label>
                        <InputText class="form-control" @bind-Value=@phieuXuat.SoPhieuXuat />
                        <ValidationMessage For="@(() => phieuXuat.SoPhieuXuat)" />
                    </div>

                    <div class="form-group">
                        <label for="khoID" class="control-label"><b>Kho: </b></label>
                        <InputSelect class="form-control" @bind-Value="@phieuXuat.KhoId">
                            <option value="">-- Chọn kho --</option>
                            @foreach (var item in khoList)
                            {
                                <option value="@item.AutoId">@item.MaKho - @item.TenKho</option>
                            }
                        </InputSelect>
                        <ValidationMessage For="@(()=>phieuXuat.KhoId)" />
                    </div>

                    <div class="form-group">
                        <label for="NgayXuatKho" class="control-label"><b>Ngày xuất kho: </b></label>
                        <InputDate class="form-control" @bind-Value=@phieuXuat.NgayXuatKho />
                        <ValidationMessage For="@(() => phieuXuat.NgayXuatKho)" />
                    </div>
                    <div class="form-group">
                        <label for="GhiChu" class="control-label"><b>Ghi chú: </b></label>
                        <InputText class="form-control" @bind-Value=@phieuXuat.GhiChu />
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">Sửa phiếu xuất</button>
                        <button type="button" class="btn btn-secondary" @onclick="CloseEditModal">Đóng</button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>

<div class="modal fade @addChiTietModalClass" tabindex="-1" role="dialog" style="@addChiTietModalDisplayStyle">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header" style="background:#2f8f3a; color:#dedcd8">
                <h5 class="modal-title"><b>Thêm chi tiết phiếu xuất</b></h5>
                <button type="button" class="close" @onclick="CloseAddChiTietModal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <InputSelect class="form-control" @bind-Value="@newChiTiet.SanPhamId">
                        <option value="">-- Chọn sản phẩm --</option>
                        @foreach (var item in sanPhamList)
                        {
                            <option value="@item.AutoId">@item.MaSanPham - @item.TenSanPham</option>
                        }
                    </InputSelect>
                </div>
                <div class="form-group">
                    <label for="SoLuong">Số lượng xuất:</label>
                    <InputNumber class="form-control" @bind-Value="newChiTiet.SlXuat" />
                </div>
                <div class="form-group">
                    <label for="DonGia">Đơn giá:</label>
                    <InputNumber class="form-control" @bind-Value="newChiTiet.DonGiaXuat" />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" @onclick="AddChiTiet">Thêm</button>
                    <button type="button" class="btn btn-secondary" @onclick="CloseAddChiTietModal">Đóng</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade @deleteModalClass" tabindex="-1" role="dialog" style="@deleteModalDisplayStyle">
    <div class="modal-dialog model-lg" role="document">
        <div class="modal-content">
            <div class="modal-header" style="background:#2f8f3a; color:beige">
                <h5 class="modal-title"><b>Xóa phiếu xuất</b></h5>
                <button type="button" class="close" @onclick="CloseDeleteModal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" style="background:#dedcd8; color:brown; font-size:30px">
                <p style="color:red">Bạn có chắc chắn muốn xóa phiếu xuất này không?</p>
                <EditForm Model="@phieuXuat" OnValidSubmit="deletePhieuXuat">
                    <DataAnnotationsValidator />
                    <div class="form-group">
                        <label for="SoPhieuXuat" class="control-label">Số phiếu xuất: </label>
                        <label><b>@phieuXuat.SoPhieuXuat</b></label>
                    </div>
                    <div class="form-group">
                        <label for="TenKho" class="control-label">Kho: </label>
                        <label><b>@phieuXuat.KhoId</b></label>
                    </div>
                    <div class="form-group">
                        <label for="NgayXuat" class="control-label">Ngày xuất kho: </label>
                        <label><b>@phieuXuat.NgayXuatKho</b></label>
                    </div>
                    <div class="form-group">
                        <label for="Ghichu" class="control-label">Ghi chú: </label>
                        <label><b>@phieuXuat.GhiChu</b></label>
                    </div>

                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">Xóa phiếu xuất</button>
                        <button type="button" class="btn btn-secondary" @onclick="CloseDeleteModal">Đóng</button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>



@code {
    private List<XNK_XuatKho> dataList = new List<XNK_XuatKho>();
    public List<XNK_XuatKhoRawData> lstCTPX = new List<XNK_XuatKhoRawData>();
    private XNK_XuatKho phieuXuat = new XNK_XuatKho();
    private List<DanhMucNCC> nccList = new List<DanhMucNCC>();
    private List<DanhMucKho> khoList = new List<DanhMucKho>();
    private List<DanhMucSanPham> sanPhamList = new List<DanhMucSanPham>();
    private XNK_XuatKhoRawData newChiTiet = new XNK_XuatKhoRawData();

    private ML_Machine mlMachine = new ML_Machine();

    private string addModalClass = "";
    private string addModalDisplayStyle = "display:none";
    private string editModalClass = "";
    private string editModalDisplayStyle = "display:none";
    private string deleteModalClass = "";
    private string deleteModalDisplayStyle = "display:none";
    private string addChiTietModalClass = "";
    private string addChiTietModalDisplayStyle = "display:none";

    protected override async Task OnInitializedAsync()
    {
        try
        {
            user.TenDangNhap = await user_service.GetCurrentTenDangNhap();
            if (user.TenDangNhap != "admin")
            {
                var userRole = await user_service.GetUserRole(user.TenDangNhap);
                if (userRole != "1")
                {
                    Navigation.NavigateTo("/Error");
                    return;
                }
            }
            dataList = await phieuXuat_Service.GetPhieuXuat();
            nccList = await phieuXuat_Service.GetDanhMucNCC();
            khoList = await phieuXuat_Service.GetDanhMucKho();
            sanPhamList = await phieuXuat_Service.GetDanhMucSanPham();

            //mlMachine.PrintTrainingData();
            //var trainingData = await chitietPhieuXuat_Service.GetTrainingData();
            mlMachine.TrainModel();
        }
        catch (Exception e)
        {
            Navigation.NavigateTo("/Error");
        }

    }

    private void OpenAddModal()
    {
        phieuXuat = new XNK_XuatKho();
        addModalClass = "show";
        addModalDisplayStyle = "display:block";
    }

    private void CloseAddModal()
    {
        addModalClass = "";
        addModalDisplayStyle = "display:none";
    }

    private void OpenEditModal(XNK_XuatKho phieuXuatToEdit)
    {
        phieuXuat = phieuXuatToEdit;
        editModalClass = "show";
        editModalDisplayStyle = "display:block";
    }

    private void CloseEditModal()
    {
        editModalClass = "";
        editModalDisplayStyle = "display:none";
    }

    private void OpenDeleteModal(XNK_XuatKho phieuXuatToDelete)
    {
        phieuXuat = phieuXuatToDelete;
        deleteModalClass = "show";
        deleteModalDisplayStyle = "display:block";
    }

    private void CloseDeleteModal()
    {
        deleteModalClass = "";
        deleteModalDisplayStyle = "display:none";
    }

    private void OpenAddChiTietModal()
    {
        newChiTiet = new XNK_XuatKhoRawData();
        addChiTietModalClass = "show";
        addChiTietModalDisplayStyle = "display:block";
    }

    private void CloseAddChiTietModal()
    {
        addChiTietModalClass = "";
        addChiTietModalDisplayStyle = "display:none";
        StateHasChanged();
    }

    private void AddChiTiet()
    {
        lstCTPX.Add(newChiTiet);
        CloseAddChiTietModal();
    }

    private void RemoveChiTiet(XNK_XuatKhoRawData chitiet)
    {
        lstCTPX.Remove(chitiet);
        StateHasChanged();
    }

    private async Task createPhieuXuat()
    {
        bool isFraud = mlMachine.Predict(new XuatKhoData
            {
                SlXuat = (float)newChiTiet.SlXuat,
                DonGiaXuat = (float)newChiTiet.DonGiaXuat,
                NgayXuatKho = phieuXuat.NgayXuatKho.HasValue ? (float)(phieuXuat.NgayXuatKho.Value - new DateTime(1970, 1, 1)).TotalDays : 0
            });
        if (isFraud)
        {
            ToastService.ShowError("Phát hiện gian lận!");
            return;
        }
        try
        {
            if (await phieuXuat_Service.IsSoPhieuXuatExists(phieuXuat.SoPhieuXuat, "SQLDEVELOPER"))
            {
                ToastService.ShowError("Số phiếu xuất đã tồn tại!");
                return;
            }
            if (await phieuXuat_Service.AddPhieuXuat(phieuXuat))
            {
                foreach (XNK_XuatKhoRawData ctpx in lstCTPX)
                {
                    ctpx.XuatKhoId = phieuXuat.AutoId;
                    await chitietPhieuXuat_Service.AddChiTietPhieuXuat(ctpx);
                }
                ToastService.ShowSuccess("Thêm phiếu xuất thành công!");
                dataList = await phieuXuat_Service.GetPhieuXuat();
                CloseAddModal();
            }
        }catch(Exception e){
            Console.WriteLine(e.Message);
            ToastService.ShowError("Tạo phiếu xuất thất bại");
        }

    }

    private async Task updatePhieuXuat()
    {
        var result = await phieuXuat_Service.UpdatePhieuXuat(phieuXuat);
        if (result)
        {
            ToastService.ShowSuccess("Cập nhật phiếu xuất thành công!");
            dataList = await phieuXuat_Service.GetPhieuXuat();
            CloseEditModal();
        }
        else
        {
            ToastService.ShowError("Cập nhật phiếu xuất thất bại!");
        }
    }

    private async Task deletePhieuXuat()
    {
        try
        {
            await phieuXuat_Service.DeletePhieuXuat(phieuXuat);
            await chitietPhieuXuat_Service.DeleteChiTietPhieuXuat(phieuXuat.AutoId);
            ToastService.ShowSuccess("Xóa phiếu xuất thành công!");
            dataList = await phieuXuat_Service.GetPhieuXuat();
            CloseDeleteModal();
        }
        catch (Exception ex)
        {
            //throw e;
            ToastService.ShowError("Có lỗi xảy ra!");
        }
    }

    private void EditItem(GridCommandEventArgs args)
    {
        var phieuXuatToEdit = (XNK_XuatKho)args.Item;
        OpenEditModal(phieuXuatToEdit);
    }

    private void DeleteItem(GridCommandEventArgs args)
    {
        var phieuXuatToDelete = (XNK_XuatKho)args.Item;
        OpenDeleteModal(phieuXuatToDelete);
    }

    private void ViewDetails(int Auto_ID)
    {
        Navigation.NavigateTo($"/chitietphieuxuat/{Auto_ID}");
    }

    private void ExportReport(string Auto_ID)
    {
        Navigation.NavigateTo($"/reportxuatkho/{Auto_ID}");
    }

    private string GetProductName(int sanPhamId)
    {
        return sanPham_Service.GetProductName2(sanPhamId);
    }

}
